{"ast":null,"code":"var _jsxFileName = \"/home/adrancarnavale/Documents/project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport actionSaveUserEmail from '../actions';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.emailValidation = email => {\n      const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n      if (email.match(regex)) return true;\n      return false;\n    };\n\n    this.passwordValidation = password => {\n      const MINIMAL_LENGTH_REQUIRED = 6;\n      if (password.split('').length >= MINIMAL_LENGTH_REQUIRED) return true;\n      return false;\n    };\n\n    this.verifyButtonDisablement = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailValidation,\n        passwordValidation\n      } = this;\n\n      if (emailValidation(email) && passwordValidation(password)) {\n        this.setState({\n          isButtonDisabled: false\n        });\n      } else {\n        this.setState({\n          isButtonDisabled: true\n        });\n      }\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        value,\n        name\n      } = target;\n      const {\n        verifyButtonDisablement\n      } = this;\n      this.setState({\n        [name]: value\n      }, () => verifyButtonDisablement());\n    };\n\n    this.handleClick = () => {\n      const {\n        email\n      } = this.state;\n      const {\n        saveUserEmail,\n        history\n      } = this.props;\n      saveUserEmail(email);\n      this.setState({\n        password: ''\n      }, () => history.push('/carteira'));\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      isButtonDisabled: true\n    };\n  }\n\n  render() {\n    const {\n      handleChange,\n      handleClick\n    } = this;\n    const {\n      isButtonDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"user-email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"E-mail:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"email-input\",\n      type: \"text\",\n      name: \"email\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"user-password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"password-input\",\n      type: \"password\",\n      name: \"password\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: isButtonDisabled,\n      onClick: handleClick,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Entrar\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveUserEmail: email => dispatch(actionSaveUserEmail(email))\n});\n\nLogin.propTypes = {\n  saveUserEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default withRouter(connect(null, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/home/adrancarnavale/Documents/project-trybewallet/src/pages/Login.js"],"names":["React","withRouter","connect","PropTypes","actionSaveUserEmail","Login","Component","constructor","emailValidation","email","regex","match","passwordValidation","password","MINIMAL_LENGTH_REQUIRED","split","length","verifyButtonDisablement","state","setState","isButtonDisabled","handleChange","target","value","name","handleClick","saveUserEmail","history","props","push","render","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport actionSaveUserEmail from '../actions';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      isButtonDisabled: true,\n    };\n  }\n\n  emailValidation = (email) => {\n    const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    if (email.match(regex)) return true;\n    return false;\n  }\n\n  passwordValidation = (password) => {\n    const MINIMAL_LENGTH_REQUIRED = 6;\n    if (password.split('').length >= MINIMAL_LENGTH_REQUIRED) return true;\n    return false;\n  };\n\n  verifyButtonDisablement = () => {\n    const { email, password } = this.state;\n    const { emailValidation, passwordValidation } = this;\n    if (emailValidation(email) && passwordValidation(password)) {\n      this.setState({ isButtonDisabled: false });\n    } else {\n      this.setState({ isButtonDisabled: true });\n    }\n  };\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n    const { verifyButtonDisablement } = this;\n    this.setState({ [name]: value }, () => verifyButtonDisablement());\n  };\n\n  handleClick = () => {\n    const { email } = this.state;\n    const { saveUserEmail, history } = this.props;\n    saveUserEmail(email);\n    this.setState({ password: '' }, () => history.push('/carteira'));\n  };\n\n  render() {\n    const { handleChange, handleClick } = this;\n    const { isButtonDisabled } = this.state;\n    return (\n      <div className=\"login-container\">\n        <label\n          htmlFor=\"user-email-input\"\n        >\n          E-mail:\n          <input\n            data-testid=\"email-input\"\n            type=\"text\"\n            name=\"email\"\n            onChange={ handleChange }\n          />\n        </label>\n        <label\n          htmlFor=\"user-password-input\"\n        >\n          Password:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n            name=\"password\"\n            onChange={ handleChange }\n          />\n        </label>\n        <button\n          disabled={ isButtonDisabled }\n          onClick={ handleClick }\n          type=\"button\"\n        >\n          Entrar\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveUserEmail: (email) => dispatch(actionSaveUserEmail(email)),\n});\n\nLogin.propTypes = {\n  saveUserEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/adrancarnavale/Documents/project-trybewallet/src/Components/WalletForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { actionFetchApi, actionFetchCurrenciesList, actionCalculateInitialExpenses } from '../actions';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      const {\n        saveCurrenciesList,\n        calculateInitialExpenses\n      } = this.props;\n      saveCurrenciesList();\n      calculateInitialExpenses();\n    };\n\n    this.handleState = () => {\n      const {\n        submitFormInformations\n      } = this.props;\n      submitFormInformations(this.state);\n      this.setState({\n        value: '0'\n      });\n    };\n\n    this.handleSubmitClick = event => {\n      event.preventDefault();\n      const {\n        handleState\n      } = this;\n      const {\n        currentExpenses\n      } = this.props;\n      const actualExpensesSize = currentExpenses.length;\n      this.setState({\n        id: actualExpensesSize\n      }, () => handleState());\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      value: '0',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      id: 0\n    };\n  }\n\n  render() {\n    const {\n      handleSubmitClick,\n      handleChange\n    } = this;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currenciesList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      id: \"value-input\",\n      onChange: handleChange,\n      name: \"value\",\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      id: \"description-input\",\n      onChange: handleChange,\n      name: \"description\",\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency-input\",\n      onChange: handleChange,\n      name: \"currency\",\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, currenciesList.map((coin, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: coin.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, coin.code)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de Pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"method-input\",\n      onChange: handleChange,\n      name: \"method\",\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag-input\",\n      onChange: handleChange,\n      name: \"tag\",\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmitClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentExpenses: state.wallet.expenses,\n  currenciesList: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submitFormInformations: expenseInformations => dispatch(actionFetchApi(expenseInformations)),\n  saveCurrenciesList: () => dispatch(actionFetchCurrenciesList()),\n  calculateInitialExpenses: () => dispatch(actionCalculateInitialExpenses())\n});\n\nWalletForm.propTypes = {\n  currentExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  submitFormInformations: PropTypes.func.isRequired,\n  saveCurrenciesList: PropTypes.func.isRequired,\n  currenciesList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  calculateInitialExpenses: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);","map":{"version":3,"sources":["/home/adrancarnavale/Documents/project-trybewallet/src/Components/WalletForm.js"],"names":["React","Component","connect","PropTypes","actionFetchApi","actionFetchCurrenciesList","actionCalculateInitialExpenses","WalletForm","constructor","componentDidMount","saveCurrenciesList","calculateInitialExpenses","props","handleState","submitFormInformations","state","setState","value","handleSubmitClick","event","preventDefault","currentExpenses","actualExpensesSize","length","id","handleChange","target","name","description","currency","method","tag","render","currenciesList","map","coin","index","code","mapStateToProps","wallet","expenses","currencies","mapDispatchToProps","dispatch","expenseInformations","propTypes","arrayOf","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport {\n  actionFetchApi,\n  actionFetchCurrenciesList,\n  actionCalculateInitialExpenses,\n} from '../actions';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '0',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      id: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    const { saveCurrenciesList, calculateInitialExpenses } = this.props;\n    saveCurrenciesList();\n    calculateInitialExpenses();\n  };\n\n  handleState = () => {\n    const { submitFormInformations } = this.props;\n    submitFormInformations(this.state);\n    this.setState({ value: '0' });\n  };\n\n  handleSubmitClick = (event) => {\n    event.preventDefault();\n    const { handleState } = this;\n    const { currentExpenses } = this.props;\n    const actualExpensesSize = currentExpenses.length;\n    this.setState({ id: actualExpensesSize }, () => handleState());\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { handleSubmitClick, handleChange } = this;\n    const { value, description, currency, method, tag } = this.state;\n    const { currenciesList } = this.props;\n    return (\n      <div>\n        <form>\n          <label\n            htmlFor=\"value-input\"\n          >\n            Valor:\n            <input\n              type=\"number\"\n              data-testid=\"value-input\"\n              id=\"value-input\"\n              onChange={ handleChange }\n              name=\"value\"\n              value={ value }\n            />\n          </label>\n          <label\n            htmlFor=\"description-input\"\n          >\n            Descrição:\n            <input\n              type=\"text\"\n              data-testid=\"description-input\"\n              id=\"description-input\"\n              onChange={ handleChange }\n              name=\"description\"\n              value={ description }\n            />\n          </label>\n          <label\n            htmlFor=\"currency-input\"\n          >\n            Moeda:\n            <select\n              data-testid=\"currency-input\"\n              id=\"currency-input\"\n              onChange={ handleChange }\n              name=\"currency\"\n              value={ currency }\n            >\n              {\n                currenciesList.map((coin, index) => (\n                  <option\n                    key={ index }\n                    value={ coin.code }\n                  >\n                    { coin.code }\n                  </option>\n                ))\n              }\n            </select>\n          </label>\n          <label\n            htmlFor=\"method-input\"\n          >\n            Método de Pagamento:\n            <select\n              data-testid=\"method-input\"\n              id=\"method-input\"\n              onChange={ handleChange }\n              name=\"method\"\n              value={ method }\n            >\n              <option value=\"Dinheiro\">Dinheiro</option>\n              <option value=\"Cartão de débito\">Cartão de débito</option>\n              <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            </select>\n          </label>\n          <label\n            htmlFor=\"tag-input\"\n          >\n            Categoria:\n            <select\n              data-testid=\"tag-input\"\n              id=\"tag-input\"\n              onChange={ handleChange }\n              name=\"tag\"\n              value={ tag }\n            >\n              <option value=\"Alimentação\">Alimentação</option>\n              <option value=\"Lazer\">Lazer</option>\n              <option value=\"Trabalho\">Trabalho</option>\n              <option value=\"Transporte\">Transporte</option>\n              <option value=\"Saúde\">Saúde</option>\n            </select>\n          </label>\n          <button\n            type=\"submit\"\n            onClick={ handleSubmitClick }\n          >\n            Adicionar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentExpenses: state.wallet.expenses,\n  currenciesList: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  submitFormInformations:\n    (expenseInformations) => dispatch(actionFetchApi(expenseInformations)),\n  saveCurrenciesList:\n    () => dispatch(actionFetchCurrenciesList()),\n  calculateInitialExpenses: () => dispatch(actionCalculateInitialExpenses()),\n});\n\nWalletForm.propTypes = {\n  currentExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  submitFormInformations: PropTypes.func.isRequired,\n  saveCurrenciesList: PropTypes.func.isRequired,\n  currenciesList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  calculateInitialExpenses: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  totalExpenses: ''\n};\n\nconst calculateIndividualExpenses = _ref => {\n  let {\n    value,\n    currency,\n    exchangeRates\n  } = _ref;\n  const newValue = Number(value);\n  const newRates = Number(exchangeRates[currency].ask);\n  return newValue * newRates;\n};\n\nconst calculateTotalExpenses = arrayOfExpenses => {\n  if (arrayOfExpenses.length === 0) {\n    return '0';\n  }\n\n  const arrayOfValues = arrayOfExpenses.map(expense => calculateIndividualExpenses(expense));\n  return arrayOfValues.reduce((acc, curr) => acc + curr).toFixed(2).toString();\n};\n\nconst getCurrenciesList = currencies => {\n  const arrayOfCurrencies = Object.values(currencies);\n  const filteredArrayOfCurrencies = arrayOfCurrencies.filter(element => element.codein !== 'BRLT');\n  return filteredArrayOfCurrencies;\n};\n\nconst wallet = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const walletObject = {\n    SUBMIT_FORM_INFORMATIONS: () => ({ ...state,\n      expenses: [...state.expenses, action.expenseInformation],\n      totalExpenses: calculateTotalExpenses([...state.expenses, action.expenseInformation])\n    }),\n    SAVE_CURRENCIES_LIST: () => ({ ...state,\n      currencies: getCurrenciesList(action.currenciesList)\n    }),\n    CALCULATE_INITIAL_EXPENSES: () => ({ ...state,\n      totalExpenses: calculateTotalExpenses(state.expenses)\n    }),\n    UPDATE_EXPENSES_INFOS: () => ({ ...state,\n      expenses: [...action.newExpenses],\n      totalExpenses: calculateTotalExpenses(action.newExpenses)\n    }),\n    DEFAULT: () => ({ ...state\n    })\n  };\n  return (walletObject[action.type] || walletObject.DEFAULT)();\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/adrancarnavale/Documents/project-trybewallet/src/reducers/wallet.js"],"names":["INITIAL_STATE","currencies","expenses","totalExpenses","calculateIndividualExpenses","value","currency","exchangeRates","newValue","Number","newRates","ask","calculateTotalExpenses","arrayOfExpenses","length","arrayOfValues","map","expense","reduce","acc","curr","toFixed","toString","getCurrenciesList","arrayOfCurrencies","Object","values","filteredArrayOfCurrencies","filter","element","codein","wallet","state","action","walletObject","SUBMIT_FORM_INFORMATIONS","expenseInformation","SAVE_CURRENCIES_LIST","currenciesList","CALCULATE_INITIAL_EXPENSES","UPDATE_EXPENSES_INFOS","newExpenses","DEFAULT","type"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,aAAa,EAAE;AAHK,CAAtB;;AAMA,MAAMC,2BAA2B,GAAG,QAAwC;AAAA,MAAvC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAuC;AAC1E,QAAMC,QAAQ,GAAGC,MAAM,CAACJ,KAAD,CAAvB;AACA,QAAMK,QAAQ,GAAGD,MAAM,CAACF,aAAa,CAACD,QAAD,CAAb,CAAwBK,GAAzB,CAAvB;AACA,SAAQH,QAAQ,GAAGE,QAAnB;AACD,CAJD;;AAMA,MAAME,sBAAsB,GAAIC,eAAD,IAAqB;AAClD,MAAIA,eAAe,CAACC,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,WAAO,GAAP;AACD;;AACD,QAAMC,aAAa,GAAGF,eAAe,CAACG,GAAhB,CACnBC,OAAD,IAAab,2BAA2B,CAACa,OAAD,CADpB,CAAtB;AAGA,SAAOF,aAAa,CAACG,MAAd,CAAqB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAA1C,EAAgDC,OAAhD,CAAwD,CAAxD,EAA2DC,QAA3D,EAAP;AACD,CARD;;AAUA,MAAMC,iBAAiB,GAAItB,UAAD,IAAgB;AACxC,QAAMuB,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAczB,UAAd,CAA1B;AACA,QAAM0B,yBAAyB,GAAGH,iBAAiB,CAACI,MAAlB,CAC/BC,OAAD,IAAaA,OAAO,CAACC,MAAR,KAAmB,MADA,CAAlC;AAGA,SAAOH,yBAAP;AACD,CAND;;AAQA,MAAMI,MAAM,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BhC,aAA0B;AAAA,MAAXiC,MAAW;AAChD,QAAMC,YAAY,GAAG;AACnBC,IAAAA,wBAAwB,EAAE,OAAO,EAC/B,GAAGH,KAD4B;AAE/B9B,MAAAA,QAAQ,EAAE,CAAC,GAAG8B,KAAK,CAAC9B,QAAV,EAAoB+B,MAAM,CAACG,kBAA3B,CAFqB;AAG/BjC,MAAAA,aAAa,EACXS,sBAAsB,CAAC,CAAC,GAAGoB,KAAK,CAAC9B,QAAV,EAAoB+B,MAAM,CAACG,kBAA3B,CAAD;AAJO,KAAP,CADP;AAOnBC,IAAAA,oBAAoB,EAAE,OAAO,EAC3B,GAAGL,KADwB;AAE3B/B,MAAAA,UAAU,EAAEsB,iBAAiB,CAACU,MAAM,CAACK,cAAR;AAFF,KAAP,CAPH;AAWnBC,IAAAA,0BAA0B,EAAE,OAAO,EACjC,GAAGP,KAD8B;AAEjC7B,MAAAA,aAAa,EACXS,sBAAsB,CAACoB,KAAK,CAAC9B,QAAP;AAHS,KAAP,CAXT;AAgBnBsC,IAAAA,qBAAqB,EAAE,OAAO,EAC5B,GAAGR,KADyB;AAE5B9B,MAAAA,QAAQ,EAAE,CAAC,GAAG+B,MAAM,CAACQ,WAAX,CAFkB;AAG5BtC,MAAAA,aAAa,EACXS,sBAAsB,CAACqB,MAAM,CAACQ,WAAR;AAJI,KAAP,CAhBJ;AAsBnBC,IAAAA,OAAO,EAAE,OAAO,EACd,GAAGV;AADW,KAAP;AAtBU,GAArB;AA0BA,SAAO,CAACE,YAAY,CAACD,MAAM,CAACU,IAAR,CAAZ,IAA6BT,YAAY,CAACQ,OAA3C,GAAP;AACD,CA5BD;;AA8BA,eAAeX,MAAf","sourcesContent":["const INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  totalExpenses: '',\n};\n\nconst calculateIndividualExpenses = ({ value, currency, exchangeRates }) => {\n  const newValue = Number(value);\n  const newRates = Number(exchangeRates[currency].ask);\n  return (newValue * newRates);\n};\n\nconst calculateTotalExpenses = (arrayOfExpenses) => {\n  if (arrayOfExpenses.length === 0) {\n    return '0';\n  }\n  const arrayOfValues = arrayOfExpenses.map(\n    (expense) => calculateIndividualExpenses(expense),\n  );\n  return arrayOfValues.reduce((acc, curr) => acc + curr).toFixed(2).toString();\n};\n\nconst getCurrenciesList = (currencies) => {\n  const arrayOfCurrencies = Object.values(currencies);\n  const filteredArrayOfCurrencies = arrayOfCurrencies.filter(\n    (element) => element.codein !== 'BRLT',\n  );\n  return filteredArrayOfCurrencies;\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  const walletObject = {\n    SUBMIT_FORM_INFORMATIONS: () => ({\n      ...state,\n      expenses: [...state.expenses, action.expenseInformation],\n      totalExpenses:\n        calculateTotalExpenses([...state.expenses, action.expenseInformation]),\n    }),\n    SAVE_CURRENCIES_LIST: () => ({\n      ...state,\n      currencies: getCurrenciesList(action.currenciesList),\n    }),\n    CALCULATE_INITIAL_EXPENSES: () => ({\n      ...state,\n      totalExpenses:\n        calculateTotalExpenses(state.expenses),\n    }),\n    UPDATE_EXPENSES_INFOS: () => ({\n      ...state,\n      expenses: [...action.newExpenses],\n      totalExpenses:\n        calculateTotalExpenses(action.newExpenses),\n    }),\n    DEFAULT: () => ({\n      ...state,\n    }),\n  };\n  return (walletObject[action.type] || walletObject.DEFAULT)();\n};\n\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}
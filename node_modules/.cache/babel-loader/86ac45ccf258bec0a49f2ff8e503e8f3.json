{"ast":null,"code":"var _jsxFileName = \"/home/adrancarnavale/Documents/project-trybewallet/src/Components/WalletChart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { actionLoadEditionForm, actionUpdateExpensesInfos } from '../actions';\n\nclass WalletChart extends Component {\n  constructor() {\n    super();\n\n    this.handleDeleteButtonClick = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        expensesInfos,\n        updateExpensesInfos\n      } = this.props;\n      const {\n        name\n      } = target;\n      const newExpenses = expensesInfos.filter(expense => expense.id.toString() !== name);\n      updateExpensesInfos(newExpenses);\n    };\n\n    this.loadEditForm = () => {\n      const {\n        loadEditionForm\n      } = this.props;\n      loadEditionForm(this.state);\n    };\n\n    this.handleEditButtonClick = _ref2 => {\n      let {\n        target\n      } = _ref2;\n      const {\n        loadEditForm\n      } = this;\n      this.setState({\n        isClicked: true,\n        id: Number(target.name)\n      }, () => loadEditForm());\n    };\n\n    this.state = {\n      isClicked: false,\n      id: 0\n    };\n  }\n\n  render() {\n    const {\n      handleDeleteButtonClick,\n      handleEditButtonClick\n    } = this;\n    const {\n      expensesInfos\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, expensesInfos.length === 0 ? '' : expensesInfos.map((_ref3, index) => {\n      let {\n        description,\n        tag,\n        method,\n        value,\n        currency,\n        exchangeRates,\n        id\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, exchangeRates[currency].name.split('/')[0]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, Number(exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, (value * exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"edit-btn\",\n        onClick: handleEditButtonClick,\n        name: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }\n      }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"delete-btn\",\n        onClick: handleDeleteButtonClick,\n        name: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, \"Excluir\")));\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expensesInfos: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateExpensesInfos: newExpenses => dispatch(actionUpdateExpensesInfos(newExpenses)),\n  loadEditionForm: state => dispatch(actionLoadEditionForm(state))\n});\n\nWalletChart.propTypes = {\n  expensesInfos: PropTypes.arrayOf(PropTypes.Object).isRequired,\n  updateExpensesInfos: PropTypes.func.isRequired,\n  loadEditionForm: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletChart);","map":{"version":3,"sources":["/home/adrancarnavale/Documents/project-trybewallet/src/Components/WalletChart.js"],"names":["React","Component","connect","PropTypes","actionLoadEditionForm","actionUpdateExpensesInfos","WalletChart","constructor","handleDeleteButtonClick","target","expensesInfos","updateExpensesInfos","props","name","newExpenses","filter","expense","id","toString","loadEditForm","loadEditionForm","state","handleEditButtonClick","setState","isClicked","Number","render","length","map","index","description","tag","method","value","currency","exchangeRates","split","ask","toFixed","mapStateToProps","wallet","expenses","mapDispatchToProps","dispatch","propTypes","arrayOf","Object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { actionLoadEditionForm, actionUpdateExpensesInfos } from '../actions';\n\nclass WalletChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: false,\n      id: 0,\n    };\n  }\n\n  handleDeleteButtonClick = ({ target }) => {\n    const { expensesInfos, updateExpensesInfos } = this.props;\n    const { name } = target;\n    const newExpenses = expensesInfos.filter(\n      (expense) => (expense.id).toString() !== name,\n    );\n    updateExpensesInfos(newExpenses);\n  };\n\n  loadEditForm = () => {\n    const { loadEditionForm } = this.props;\n    loadEditionForm(this.state);\n  };\n\n  handleEditButtonClick = ({ target }) => {\n    const { loadEditForm } = this;\n    this.setState({ isClicked: true, id: Number(target.name) }, () => loadEditForm());\n  };\n\n  render() {\n    const { handleDeleteButtonClick, handleEditButtonClick } = this;\n    const { expensesInfos } = this.props;\n    return (\n      <div>\n        <table>\n          <thead>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </thead>\n          <tbody>\n            {\n              expensesInfos.length === 0\n                ? ''\n                : expensesInfos.map(({\n                  description,\n                  tag, method,\n                  value,\n                  currency,\n                  exchangeRates,\n                  id,\n                }, index) => (\n                  <tr\n                    key={ index }\n                  >\n                    <td>{description}</td>\n                    <td>{tag}</td>\n                    <td>{method}</td>\n                    <td>{value}</td>\n                    <td>\n                      {\n                        exchangeRates[currency].name.split('/')[0]\n                      }\n                    </td>\n                    <td>\n                      {\n                        Number(exchangeRates[currency].ask).toFixed(2)\n                      }\n                    </td>\n                    <td>\n                      {\n                        (value * exchangeRates[currency].ask)\n                          .toFixed(2)\n                      }\n                    </td>\n                    <td>Real</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        data-testid=\"edit-btn\"\n                        onClick={ handleEditButtonClick }\n                        name={ id }\n                      >\n                        Editar\n                      </button>\n                      <button\n                        type=\"button\"\n                        data-testid=\"delete-btn\"\n                        onClick={ handleDeleteButtonClick }\n                        name={ id }\n                      >\n                        Excluir\n                      </button>\n                    </td>\n                  </tr>\n                ))\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expensesInfos: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateExpensesInfos: (newExpenses) => dispatch(actionUpdateExpensesInfos(newExpenses)),\n  loadEditionForm: (state) => dispatch(actionLoadEditionForm(state)),\n});\n\nWalletChart.propTypes = {\n  expensesInfos: PropTypes.arrayOf(PropTypes.Object).isRequired,\n  updateExpensesInfos: PropTypes.func.isRequired,\n  loadEditionForm: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletChart);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/adrancarnavale/Documents/project-trybewallet/src/Components/WalletEditForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { actionUpdateExpensesInfos, actionLoadEditionForm } from '../actions';\n\nclass WalletEditForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleEditButtonClick = event => {\n      event.preventDefault();\n      const {\n        name\n      } = event.target;\n      const {\n        currentExpenses,\n        updateExpensesInfos,\n        loadEditionForm\n      } = this.props;\n      const {\n        value,\n        description,\n        currency,\n        method,\n        tag\n      } = this.state;\n      const expenseToBeEdited = currentExpenses.find(expense => Number(expense.id) === Number(name));\n      expenseToBeEdited.value = value;\n      expenseToBeEdited.description = description;\n      expenseToBeEdited.currency = currency;\n      expenseToBeEdited.method = method;\n      expenseToBeEdited.tag = tag;\n      updateExpensesInfos(currentExpenses);\n      this.setState({\n        isClicked: false,\n        id: name\n      }, () => loadEditionForm(this.state));\n    };\n\n    this.state = {\n      value: '0',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      isClicked: false,\n      id: 0\n    };\n  }\n\n  render() {\n    const {\n      handleEditButtonClick,\n      handleChange\n    } = this;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      position,\n      currenciesList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      id: \"value-input\",\n      onChange: handleChange,\n      name: \"value\",\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      id: \"description-input\",\n      onChange: handleChange,\n      name: \"description\",\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency-input\",\n      onChange: handleChange,\n      name: \"currency\",\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, Object.keys(currenciesList).map((coin, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: coin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, coin)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de Pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"method-input\",\n      onChange: handleChange,\n      name: \"method\",\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag-input\",\n      onChange: handleChange,\n      name: \"tag\",\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: handleEditButtonClick,\n      name: position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Editar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentExpenses: state.wallet.expenses,\n  currenciesList: state.wallet.expenses[0].exchangeRates\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateExpensesInfos: newExpenses => dispatch(actionUpdateExpensesInfos(newExpenses)),\n  loadEditionForm: state => dispatch(actionLoadEditionForm(state))\n});\n\nWalletEditForm.propTypes = {\n  currentExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  position: PropTypes.number.isRequired,\n  updateExpensesInfos: PropTypes.func.isRequired,\n  currenciesList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadEditionForm: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletEditForm);","map":{"version":3,"sources":["/home/adrancarnavale/Documents/project-trybewallet/src/Components/WalletEditForm.js"],"names":["React","Component","connect","PropTypes","actionUpdateExpensesInfos","actionLoadEditionForm","WalletEditForm","constructor","handleChange","target","name","value","setState","handleEditButtonClick","event","preventDefault","currentExpenses","updateExpensesInfos","loadEditionForm","props","description","currency","method","tag","state","expenseToBeEdited","find","expense","Number","id","isClicked","render","position","currenciesList","Object","keys","map","coin","index","mapStateToProps","wallet","expenses","exchangeRates","mapDispatchToProps","dispatch","newExpenses","propTypes","arrayOf","object","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { actionUpdateExpensesInfos, actionLoadEditionForm } from '../actions';\n\nclass WalletEditForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '0',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      isClicked: false,\n      id: 0,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleEditButtonClick = (event) => {\n    event.preventDefault();\n    const { name } = event.target;\n    const { currentExpenses, updateExpensesInfos, loadEditionForm } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    const expenseToBeEdited = currentExpenses.find(\n      (expense) => Number(expense.id) === Number(name),\n    );\n\n    expenseToBeEdited.value = value;\n    expenseToBeEdited.description = description;\n    expenseToBeEdited.currency = currency;\n    expenseToBeEdited.method = method;\n    expenseToBeEdited.tag = tag;\n\n    updateExpensesInfos(currentExpenses);\n    this.setState({ isClicked: false, id: name }, () => loadEditionForm(this.state));\n  };\n\n  render() {\n    const { handleEditButtonClick, handleChange } = this;\n    const { value, description, currency, method, tag } = this.state;\n    const { position, currenciesList } = this.props;\n    return (\n      <div>\n        <form>\n          <label\n            htmlFor=\"value-input\"\n          >\n            Valor:\n            <input\n              type=\"number\"\n              data-testid=\"value-input\"\n              id=\"value-input\"\n              onChange={ handleChange }\n              name=\"value\"\n              value={ value }\n            />\n          </label>\n          <label\n            htmlFor=\"description-input\"\n          >\n            Descrição:\n            <input\n              type=\"text\"\n              data-testid=\"description-input\"\n              id=\"description-input\"\n              onChange={ handleChange }\n              name=\"description\"\n              value={ description }\n            />\n          </label>\n          <label\n            htmlFor=\"currency-input\"\n          >\n            Moeda:\n            <select\n              data-testid=\"currency-input\"\n              id=\"currency-input\"\n              onChange={ handleChange }\n              name=\"currency\"\n              value={ currency }\n            >\n              {\n                Object.keys(currenciesList).map((coin, index) => (\n                  <option\n                    key={ index }\n                    value={ coin }\n                  >\n                    { coin }\n                  </option>\n                ))\n              }\n            </select>\n          </label>\n          <label\n            htmlFor=\"method-input\"\n          >\n            Método de Pagamento:\n            <select\n              data-testid=\"method-input\"\n              id=\"method-input\"\n              onChange={ handleChange }\n              name=\"method\"\n              value={ method }\n            >\n              <option value=\"Dinheiro\">Dinheiro</option>\n              <option value=\"Cartão de débito\">Cartão de débito</option>\n              <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            </select>\n          </label>\n          <label\n            htmlFor=\"tag-input\"\n          >\n            Categoria:\n            <select\n              data-testid=\"tag-input\"\n              id=\"tag-input\"\n              onChange={ handleChange }\n              name=\"tag\"\n              value={ tag }\n            >\n              <option value=\"Alimentação\">Alimentação</option>\n              <option value=\"Lazer\">Lazer</option>\n              <option value=\"Trabalho\">Trabalho</option>\n              <option value=\"Transporte\">Transporte</option>\n              <option value=\"Saúde\">Saúde</option>\n            </select>\n          </label>\n          <button\n            type=\"submit\"\n            onClick={ handleEditButtonClick }\n            name={ position }\n          >\n            Editar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentExpenses: state.wallet.expenses,\n  currenciesList: state.wallet.expenses[0].exchangeRates,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateExpensesInfos: (newExpenses) => dispatch(actionUpdateExpensesInfos(newExpenses)),\n  loadEditionForm: (state) => dispatch(actionLoadEditionForm(state)),\n});\n\nWalletEditForm.propTypes = {\n  currentExpenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  position: PropTypes.number.isRequired,\n  updateExpensesInfos: PropTypes.func.isRequired,\n  currenciesList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadEditionForm: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletEditForm);\n"]},"metadata":{},"sourceType":"module"}